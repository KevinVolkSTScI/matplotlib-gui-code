Metadata-Version: 2.1
Name: matplotlib-user-interface
Version: 2020.11.19
Summary: A Matplotlib GUI program reminiscent of xmgrace.
Home-page: https://github.com/KevinVolkSTScI/matplotlib-gui-code
Author: Kevin Volk
Author-email: kvolk@stsci.edu
License: UNKNOWN
Description: # matplotlib-gui-code
        
        The code here is a general driver code for the Matplotlib package, similar in
        intent to the xmgrace code that the author has used for a long time (the
        xmgrace web site is at https://plasma-gate.weizmann.ac.il/Grace/, but since it
        depends on X11 and Motif it does not seem to be a viable option for the future).
        
        The code can be run from within python or from the command line.  In either
        case a separate window is created for the plot from which the manipulations
        of the plot parameters is carried out.  It uses matplotlib and tkinter as
        well as other standard Python packages.
        
        ** Note: MacOS 10.14 Mojave Issue With Python version 3.7
        
        The code here uses the Tkinter package that is part of the standard Python 
        distribution.  In the MacOS version 10.14 (Mojave) there is an issue that
        causes the use of the Tkinter package functions with Python 3.7 to crash
        the user's session.  This issue does not exist in Python versions 3.6 or 
        3.8 with this version of MacOS, and it did not exist in the previous MacOS 
        version as far as the author is aware.    There is no solution for this issue
        within Python.  Hence, do not use this code with that particular combination
        of MacOS 10.14 and Python 3.7.
        
        ** Installation
        
        The code needs to be unpacked in some specific directory.  The files and
        subdirectories one should see are
        
        LICENSE
        build
        dist
        matplotlib_driver_code_documentation.docx
        matplotlib_driver_code_documentation.pdf
        setup.py
        src
        tests
        
        The code files, and this README file, are in the "src" directory:
        
        README.md 
        data_set_operations.py                  
        data_set_utilities.py                   
        edit_objects.py                         
        fits_image_display.py                   
        general_utilities.py                    
        histogram_utilities.py
        label_utilities.py
        matplotlib_user_interface.py
        object_utilities.py
        plot_controls.py
        plot_flag_utilities.py
        save_and_restore_plot.py
        window_creation.py
        
        Installation within Python is done via the command
        
        python setup.py install
        
        in the upper level directory where the above files are located.  This is NOT
        done within the "src" subdirectory.
        
        Once the installation has been done as above one can import the package and
        run it from the Python interpreter
        
        >>> import matplotlib_user_interface as mui
        >>> root, myplot = mui.startup()
        
        For use from the command line, see the provided documentation.
        
        ** Use of the code
        
        When the code is started a separate user interface window is created.  One
        can can create and add "data sets" from within the Python interpreter or one
        can read in data values from a file or files using the code functions.  The
        code was originally written to allow reading of data values, possibly with
        associated uncertaintes, directly from an ascii input file.  That is the most
        general way to produce data sets, although one needs to have a fixed column
        format for the data values in the ascii file.  The code cannot deal with cases
        where the number of columns per line varies within a text file, or where such
        symbols as "Inf" or "NAN" exist for some entries in a column.  One can also
        make data sets in the Python interpreter and load these into the plot via
        the "add_set" function.
        
        One can have one or more "sets" of data values in one or more plots in the
        display area.  The code also has some capability to create a data set via
        a formula or in a text area window created by the code or via a transformation
        of an existing data set.
        
        The code also has the machinery to add vectors/boxes/lines/ellipses/text to
        a given plot.
        
        Once a plot has been made, one can save the state of the code variables to an
        ascii file for later re-loading.  This is analogous to the save/open plot
        function in xmgrace.
        
        One has control of the symbols/lines/legend entries/error bars for each set,
        and control of the axis limits/labels/tick marks for each axis of each plot
        in the display area.
        
        The code is written in Python 3 and will not function in Python 2.  The code
        has been tested on a MacOS system and on a Linux system, but not on a
        Microsoft Windows system.
        
        
        
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.6
Description-Content-Type: text/markdown
